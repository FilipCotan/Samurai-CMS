@model Samurai_CMS.Models.Conference

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "Conferences", new { id = Model.Id }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4>Edit conference</h4>
    </div>
    <div class="modal-body">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Theme, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Theme, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Theme, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaperIsRequired, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.PaperIsRequired)
                        @Html.ValidationMessageFor(model => model.PaperIsRequired, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReviewersCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReviewersCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReviewersCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                    @Html.Action("Edit", "Conferences")
            </div>
        </div>
    </div>
    <div class="modal-footer form-group">
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
